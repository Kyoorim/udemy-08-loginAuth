{"ast":null,"code":"var _jsxFileName = \"/Users/kyoorim/Desktop/practice-coding/udemy-08-loginAuth/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjustedExpirationTime = new Date(expirationTime).getTime();\n  const remainingTime = adjustedExpirationTime - currentTime;\n  return remainingTime;\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken); // initialToken을 선언하기 전에는 useState(null)이었음\n\n  const userIsLoggedIn = !!token; // token에 문자열이 있으면 truthy, 없으면 falsy\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setTimeout(logoutHandler, 3000); // firebase에서는 로그인유효시간을 1시간으로 지정해둠. 그 시간이 지나면 자동으로 로그아웃 되게 함\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext; // 여기까지 설정 마친다음에는 index.js 로 가기\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjustedExpirationTime","remainingTime","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","userIsLoggedIn","logoutHandler","removeItem","loginHandler","setItem","setTimeout","contextValue","children"],"sources":["/Users/kyoorim/Desktop/practice-coding/udemy-08-loginAuth/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjustedExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingTime = adjustedExpirationTime - currentTime;\n\n  return remainingTime;\n};\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken); // initialToken을 선언하기 전에는 useState(null)이었음\n\n  const userIsLoggedIn = !!token; // token에 문자열이 있으면 truthy, 없으면 falsy\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n\n    const remainingTime = calculateRemainingTime(expirationTime);\n\n    setTimeout(logoutHandler, 3000); // firebase에서는 로그인유효시간을 1시간으로 지정해둠. 그 시간이 지나면 자동으로 로그아웃 되게 함\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n\n// 여기까지 설정 마친다음에는 index.js 로 가기\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EACtCC,KAAK,EAAE,EAD+B;EAEtCC,UAAU,EAAE,KAF0B;EAGtCC,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHkB;EAItCG,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;;AAOA,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;EACjD,MAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;EACA,MAAMC,sBAAsB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA/B;EAEA,MAAME,aAAa,GAAGD,sBAAsB,GAAGH,WAA/C;EAEA,OAAOI,aAAP;AACD,CAPD;;AASA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAC5C,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;EACA,MAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBnB,QAAQ,CAACgB,YAAD,CAAlC,CAF4C,CAEM;;EAElD,MAAMI,cAAc,GAAG,CAAC,CAACjB,KAAzB,CAJ4C,CAIZ;;EAEhC,MAAMkB,aAAa,GAAG,MAAM;IAC1BF,QAAQ,CAAC,IAAD,CAAR;IACAF,YAAY,CAACK,UAAb,CAAwB,OAAxB;EACD,CAHD;;EAKA,MAAMC,YAAY,GAAG,CAACpB,KAAD,EAAQK,cAAR,KAA2B;IAC9CW,QAAQ,CAAChB,KAAD,CAAR;IACAc,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BrB,KAA9B;IAEA,MAAMU,aAAa,GAAGN,sBAAsB,CAACC,cAAD,CAA5C;IAEAiB,UAAU,CAACJ,aAAD,EAAgB,IAAhB,CAAV,CAN8C,CAMb;EAClC,CAPD;;EASA,MAAMK,YAAY,GAAG;IACnBvB,KAAK,EAAEA,KADY;IAEnBC,UAAU,EAAEgB,cAFO;IAGnBf,KAAK,EAAEkB,YAHY;IAInBjB,MAAM,EAAEe;EAJW,CAArB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEK,YAA7B;IAAA,UACGX,KAAK,CAACY;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAhCM;;GAAMb,mB;;KAAAA,mB;AAkCb,eAAeb,WAAf,C,CAEA"},"metadata":{},"sourceType":"module"}