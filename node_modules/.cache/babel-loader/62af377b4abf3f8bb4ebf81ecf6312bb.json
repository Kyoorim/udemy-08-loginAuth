{"ast":null,"code":"var _jsxFileName = \"/Users/kyoorim/Desktop/practice-coding/udemy-08-loginAuth/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext); // auth: token이 생성되는 곳인 AuthForm.js에 AuthContext 내려주기\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // + validation 로직 추가 가능!\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAL_sFLjUbNmnkOCMW020d3_c3AKfY-msI\";\n    } else {\n      // signup request 보내기!\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAL_sFLjUbNmnkOCMW020d3_c3AKfY-msI\"; // fetch(\n      //   \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAL_sFLjUbNmnkOCMW020d3_c3AKfY-msI\", // sign-up\n      //   {\n      //     method: \"POST\",\n      //     body: JSON.stringify({\n      //       email: enteredEmail,\n      //       password: enteredPassword,\n      //       returnSecureToken: true,\n      //       //firebase doc에서 요청한 내용=> returnSecureToken\tboolean\tWhether or not to return an ID and refresh token. Should always be true.\n      //     }),\n      //     headers: {\n      //       \"Content-Type\": \"application/json\",\n      //     },\n      //   }\n      // ).then((res) => {\n      //   setIsLoading(false);\n      //   if (res.ok) {\n      //   } else {\n      //     // res.ok 가 아니더라도 틀린 데이터가 무엇인지 보기위해 res.json()으로 가져오기\n      //     return res.json().then((data) => {\n      //       // show an error modal\n      //       console.log(data);\n      //       let errorMessage = \"Authentication failed !\";\n      //       // firebase 내장 에러메세지를 쓸 경우 ↓\n      //       // if (data && data.error && data.error.message) {\n      //       //   // data가 있는데 그 data에 error가 있고 error.message까지 있을 경우\n      //       //   errorMessage = data.error.message;\n      //       // }\n      //       alert(errorMessage);\n      //     });\n      //   }\n      // });\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          // show an error modal\n          console.log(data);\n          let errorMessage = \"Authentication failed !\";\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      // console.log(data);\n      authCtx.login(data.idToken); // idToken은 console에서 볼 수 있는 정해진 프로퍼티명\n      // auth: 여기까지 마친 후 MainNavigation.js로 가서 로그인 상태 Nav에 반영하기\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"BrByLDXyILkPLz1D9qcBOgV/SUM=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","useContext","AuthContext","classes","AuthForm","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","console","log","errorMessage","Error","login","idToken","catch","err","alert","message","auth","control","actions","toggle"],"sources":["/Users/kyoorim/Desktop/practice-coding/udemy-08-loginAuth/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef, useContext } from \"react\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext); // auth: token이 생성되는 곳인 AuthForm.js에 AuthContext 내려주기\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // + validation 로직 추가 가능!\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAL_sFLjUbNmnkOCMW020d3_c3AKfY-msI\";\n    } else {\n      // signup request 보내기!\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAL_sFLjUbNmnkOCMW020d3_c3AKfY-msI\";\n      // fetch(\n      //   \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAL_sFLjUbNmnkOCMW020d3_c3AKfY-msI\", // sign-up\n      //   {\n      //     method: \"POST\",\n      //     body: JSON.stringify({\n      //       email: enteredEmail,\n      //       password: enteredPassword,\n      //       returnSecureToken: true,\n      //       //firebase doc에서 요청한 내용=> returnSecureToken\tboolean\tWhether or not to return an ID and refresh token. Should always be true.\n      //     }),\n      //     headers: {\n      //       \"Content-Type\": \"application/json\",\n      //     },\n      //   }\n      // ).then((res) => {\n      //   setIsLoading(false);\n      //   if (res.ok) {\n      //   } else {\n      //     // res.ok 가 아니더라도 틀린 데이터가 무엇인지 보기위해 res.json()으로 가져오기\n      //     return res.json().then((data) => {\n      //       // show an error modal\n      //       console.log(data);\n      //       let errorMessage = \"Authentication failed !\";\n      //       // firebase 내장 에러메세지를 쓸 경우 ↓\n      //       // if (data && data.error && data.error.message) {\n      //       //   // data가 있는데 그 data에 error가 있고 error.message까지 있을 경우\n      //       //   errorMessage = data.error.message;\n      //       // }\n      //       alert(errorMessage);\n      //     });\n      //   }\n      // });\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            // show an error modal\n            console.log(data);\n            let errorMessage = \"Authentication failed !\";\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        // console.log(data);\n        authCtx.login(data.idToken); // idToken은 console에서 볼 수 있는 정해진 프로퍼티명\n        // auth: 여기까지 마친 후 MainNavigation.js로 가서 로그인 상태 Nav에 반영하기\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}